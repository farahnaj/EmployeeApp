import employeemongoapp.Employee
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_employeeMongoApp_employee_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/employee/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'address', 'error'))
printHtmlPart(1)
invokeTag('message','g',7,['code':("employee.address.label"),'default':("Address")],-1)
printHtmlPart(2)
invokeTag('textField','g',10,['name':("address"),'value':(employeeInstance?.address)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'city', 'error'))
printHtmlPart(4)
invokeTag('message','g',16,['code':("employee.city.label"),'default':("City")],-1)
printHtmlPart(2)
invokeTag('textField','g',19,['name':("city"),'value':(employeeInstance?.city)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'country', 'error'))
printHtmlPart(5)
invokeTag('message','g',25,['code':("employee.country.label"),'default':("Country")],-1)
printHtmlPart(2)
invokeTag('textField','g',28,['name':("country"),'value':(employeeInstance?.country)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'dateOfBirth', 'error'))
printHtmlPart(6)
invokeTag('message','g',34,['code':("employee.dateOfBirth.label"),'default':("Date Of Birth")],-1)
printHtmlPart(2)
invokeTag('datePicker','g',37,['name':("dateOfBirth"),'precision':("day"),'value':(employeeInstance?.dateOfBirth)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'deskLocation', 'error'))
printHtmlPart(7)
invokeTag('message','g',43,['code':("employee.deskLocation.label"),'default':("Desk Location")],-1)
printHtmlPart(2)
invokeTag('textField','g',46,['name':("deskLocation"),'value':(employeeInstance?.deskLocation)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'employeeID', 'error'))
printHtmlPart(8)
invokeTag('message','g',52,['code':("employee.employeeID.label"),'default':("Employee ID")],-1)
printHtmlPart(2)
invokeTag('field','g',55,['type':("number"),'name':("employeeID"),'value':(employeeInstance.employeeID)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'extension', 'error'))
printHtmlPart(9)
invokeTag('message','g',61,['code':("employee.extension.label"),'default':("Extension")],-1)
printHtmlPart(2)
invokeTag('field','g',64,['type':("number"),'name':("extension"),'value':(employeeInstance.extension)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'firstName', 'error'))
printHtmlPart(10)
invokeTag('message','g',70,['code':("employee.firstName.label"),'default':("First Name")],-1)
printHtmlPart(2)
invokeTag('textField','g',73,['name':("firstName"),'value':(employeeInstance?.firstName)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'jobTitle', 'error'))
printHtmlPart(11)
invokeTag('message','g',79,['code':("employee.jobTitle.label"),'default':("Job Title")],-1)
printHtmlPart(2)
invokeTag('textField','g',82,['name':("jobTitle"),'value':(employeeInstance?.jobTitle)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'joiningDate', 'error'))
printHtmlPart(12)
invokeTag('message','g',88,['code':("employee.joiningDate.label"),'default':("Joining Date")],-1)
printHtmlPart(2)
invokeTag('datePicker','g',91,['name':("joiningDate"),'precision':("day"),'value':(employeeInstance?.joiningDate)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'lastName', 'error'))
printHtmlPart(13)
invokeTag('message','g',97,['code':("employee.lastName.label"),'default':("Last Name")],-1)
printHtmlPart(2)
invokeTag('textField','g',100,['name':("lastName"),'value':(employeeInstance?.lastName)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'ldapUserID', 'error'))
printHtmlPart(14)
invokeTag('message','g',106,['code':("employee.ldapUserID.label"),'default':("Ldap User ID")],-1)
printHtmlPart(2)
invokeTag('textField','g',109,['name':("ldapUserID"),'value':(employeeInstance?.ldapUserID)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'mobileNumber', 'error'))
printHtmlPart(15)
invokeTag('message','g',115,['code':("employee.mobileNumber.label"),'default':("Mobile Number")],-1)
printHtmlPart(2)
invokeTag('textField','g',118,['name':("mobileNumber"),'value':(employeeInstance?.mobileNumber)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'nickName', 'error'))
printHtmlPart(16)
invokeTag('message','g',124,['code':("employee.nickName.label"),'default':("Nick Name")],-1)
printHtmlPart(2)
invokeTag('textField','g',127,['name':("nickName"),'value':(employeeInstance?.nickName)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'personalEmail', 'error'))
printHtmlPart(17)
invokeTag('message','g',133,['code':("employee.personalEmail.label"),'default':("Personal Email")],-1)
printHtmlPart(2)
invokeTag('textField','g',136,['name':("personalEmail"),'value':(employeeInstance?.personalEmail)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'relevantExperience', 'error'))
printHtmlPart(18)
invokeTag('message','g',142,['code':("employee.relevantExperience.label"),'default':("Relevant Experience")],-1)
printHtmlPart(2)
invokeTag('field','g',145,['type':("number"),'name':("relevantExperience"),'value':(employeeInstance.relevantExperience)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: employeeInstance, field: 'reportingManager', 'error'))
printHtmlPart(19)
invokeTag('message','g',151,['code':("employee.reportingManager.label"),'default':("Reporting Manager")],-1)
printHtmlPart(2)
invokeTag('textField','g',154,['name':("reportingManager"),'value':(employeeInstance?.reportingManager)],-1)
printHtmlPart(20)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1447264338000L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
